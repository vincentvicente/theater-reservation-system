{"ast":null,"code":"\"use client\";\n\nimport React, { useMemo } from 'react';\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { useToken } from '../../theme/internal';\nimport { generateColor } from '../util';\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nexport const isBright = (value, bgColorToken) => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  const hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst genCollapsePanelKey = (preset, index) => {\n  var _a;\n  const mergedKey = (_a = preset.key) !== null && _a !== void 0 ? _a : index;\n  return \"panel-\".concat(mergedKey);\n};\nconst ColorPresets = _ref => {\n  let {\n    prefixCls,\n    presets,\n    value: color,\n    onChange\n  } = _ref;\n  const [locale] = useLocale('ColorPicker');\n  const [, token] = useToken();\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = \"\".concat(prefixCls, \"-presets\");\n  const activeKeys = useMemo(() => presetsValue.reduce((acc, preset, index) => {\n    const {\n      defaultOpen = true\n    } = preset;\n    if (defaultOpen) {\n      acc.push(genCollapsePanelKey(preset, index));\n    }\n    return acc;\n  }, []), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  const items = presetsValue.map((preset, index) => {\n    var _a;\n    return {\n      key: genCollapsePanelKey(preset, index),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-label\")\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: (/*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-items\")\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map((presetColor, index) => (/*#__PURE__*/React.createElement(ColorBlock\n      // eslint-disable-next-line react/no-array-index-key\n      , {\n        // eslint-disable-next-line react/no-array-index-key\n        key: \"preset-\".concat(index, \"-\").concat(presetColor.toHexString()),\n        color: generateColor(presetColor).toRgbString(),\n        prefixCls: prefixCls,\n        className: classNames(\"\".concat(colorPresetsPrefixCls, \"-color\"), {\n          [\"\".concat(colorPresetsPrefixCls, \"-color-checked\")]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n          [\"\".concat(colorPresetsPrefixCls, \"-color-bright\")]: isBright(presetColor, token.colorBgElevated)\n        }),\n        onClick: () => handleClick(presetColor)\n      }))) : (/*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-empty\")\n      }, locale.presetEmpty))))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\nexport default ColorPresets;","map":{"version":3,"names":["React","useMemo","ColorBlock","Color","RcColor","classNames","useMergedState","Collapse","useLocale","useToken","generateColor","genPresetColor","list","map","value","colors","isBright","bgColorToken","r","g","b","a","toRgb","hsv","toRgbString","onBackground","toHsv","v","genCollapsePanelKey","preset","index","_a","mergedKey","key","concat","ColorPresets","_ref","prefixCls","presets","color","onChange","locale","token","presetsValue","postState","colorPresetsPrefixCls","activeKeys","reduce","acc","defaultOpen","push","handleClick","colorValue","items","label","createElement","className","children","Array","isArray","length","presetColor","toHexString","colorBgElevated","onClick","presetEmpty","defaultActiveKey","ghost"],"sources":["/Users/vicentezhu/Desktop/theater-reservation-system/frontend/node_modules/antd/es/color-picker/components/ColorPresets.js"],"sourcesContent":["\"use client\";\n\nimport React, { useMemo } from 'react';\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { useToken } from '../../theme/internal';\nimport { generateColor } from '../util';\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nexport const isBright = (value, bgColorToken) => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  const hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst genCollapsePanelKey = (preset, index) => {\n  var _a;\n  const mergedKey = (_a = preset.key) !== null && _a !== void 0 ? _a : index;\n  return `panel-${mergedKey}`;\n};\nconst ColorPresets = ({\n  prefixCls,\n  presets,\n  value: color,\n  onChange\n}) => {\n  const [locale] = useLocale('ColorPicker');\n  const [, token] = useToken();\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.reduce((acc, preset, index) => {\n    const {\n      defaultOpen = true\n    } = preset;\n    if (defaultOpen) {\n      acc.push(genCollapsePanelKey(preset, index));\n    }\n    return acc;\n  }, []), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  const items = presetsValue.map((preset, index) => {\n    var _a;\n    return {\n      key: genCollapsePanelKey(preset, index),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: (/*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-items`\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map((presetColor, index) => (/*#__PURE__*/React.createElement(ColorBlock\n      // eslint-disable-next-line react/no-array-index-key\n      , {\n        // eslint-disable-next-line react/no-array-index-key\n        key: `preset-${index}-${presetColor.toHexString()}`,\n        color: generateColor(presetColor).toRgbString(),\n        prefixCls: prefixCls,\n        className: classNames(`${colorPresetsPrefixCls}-color`, {\n          [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n          [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor, token.colorBgElevated)\n        }),\n        onClick: () => handleClick(presetColor)\n      }))) : (/*#__PURE__*/React.createElement(\"span\", {\n        className: `${colorPresetsPrefixCls}-empty`\n      }, locale.presetEmpty))))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\nexport default ColorPresets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}