{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8080/api';// Create axios instance with default config\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});export const theaterService={/**\n   * Get theater information and seating layout\n   */async getTheater(){try{const response=await apiClient.get('/theater');return response.data;}catch(error){console.error('Error fetching theater data:',error);throw new Error('Failed to load theater data');}},/**\n   * Reserve seats\n   */async reserveSeats(reservationData){try{const response=await apiClient.post('/reserve',reservationData);return response.data;}catch(error){console.error('Error reserving seats:',error);throw new Error('Failed to reserve seats');}},/**\n   * Get current seating layout\n   */async getSeating(){try{const response=await apiClient.get('/seating');return response.data;}catch(error){console.error('Error fetching seating data:',error);throw new Error('Failed to load seating data');}}};export default theaterService;","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","theaterService","getTheater","response","get","data","error","console","Error","reserveSeats","reservationData","post","getSeating"],"sources":["/Users/vicentezhu/Desktop/theater-reservation-system/frontend/src/services/theaterService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const theaterService = {\n  /**\n   * Get theater information and seating layout\n   */\n  async getTheater() {\n    try {\n      const response = await apiClient.get('/theater');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching theater data:', error);\n      throw new Error('Failed to load theater data');\n    }\n  },\n\n  /**\n   * Reserve seats\n   */\n  async reserveSeats(reservationData) {\n    try {\n      const response = await apiClient.post('/reserve', reservationData);\n      return response.data;\n    } catch (error) {\n      console.error('Error reserving seats:', error);\n      throw new Error('Failed to reserve seats');\n    }\n  },\n\n  /**\n   * Get current seating layout\n   */\n  async getSeating() {\n    try {\n      const response = await apiClient.get('/seating');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching seating data:', error);\n      throw new Error('Failed to load seating data');\n    }\n  }\n};\n\nexport default theaterService;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD;AACA,KAAM,CAAAC,SAAS,CAAGF,KAAK,CAACG,MAAM,CAAC,CAC7BC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5B;AACF;AACA,KACE,KAAM,CAAAC,UAAUA,CAAA,CAAG,CACjB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,CAChD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,IAAI,CAAAE,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACF,CAAC,CAED;AACF;AACA,KACE,KAAM,CAAAC,YAAYA,CAACC,eAAe,CAAE,CAClC,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAN,SAAS,CAACc,IAAI,CAAC,UAAU,CAAED,eAAe,CAAC,CAClE,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,IAAI,CAAAE,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACF,CAAC,CAED;AACF;AACA,KACE,KAAM,CAAAI,UAAUA,CAAA,CAAG,CACjB,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAN,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,CAChD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,IAAI,CAAAE,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACF,CACF,CAAC,CAED,cAAe,CAAAP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}