{"ast":null,"code":"\"use client\";\n\nimport React, { useMemo } from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Select from '../../select';\nimport { FORMAT_HEX, FORMAT_HSB, FORMAT_RGB } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nconst selectOptions = [FORMAT_HEX, FORMAT_HSB, FORMAT_RGB].map(format => ({\n  value: format,\n  label: format.toUpperCase()\n}));\nconst ColorInput = props => {\n  const {\n    prefixCls,\n    format,\n    value,\n    disabledAlpha,\n    onFormatChange,\n    onChange,\n    disabledFormat\n  } = props;\n  const [colorFormat, setColorFormat] = useMergedState(FORMAT_HEX, {\n    value: format,\n    onChange: onFormatChange\n  });\n  const colorInputPrefixCls = \"\".concat(prefixCls, \"-input\");\n  const handleFormatChange = newFormat => {\n    setColorFormat(newFormat);\n  };\n  const steppersNode = useMemo(() => {\n    const inputProps = {\n      value,\n      prefixCls,\n      onChange\n    };\n    switch (colorFormat) {\n      case FORMAT_HSB:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n      case FORMAT_RGB:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n      // case FORMAT_HEX:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(colorInputPrefixCls, \"-container\")\n  }, !disabledFormat && (/*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    variant: \"borderless\",\n    getPopupContainer: current => current,\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: \"\".concat(prefixCls, \"-format-select\"),\n    size: \"small\",\n    options: selectOptions\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), !disabledAlpha && (/*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  })));\n};\nexport default ColorInput;","map":{"version":3,"names":["React","useMemo","useMergedState","Select","FORMAT_HEX","FORMAT_HSB","FORMAT_RGB","ColorAlphaInput","ColorHexInput","ColorHsbInput","ColorRgbInput","selectOptions","map","format","value","label","toUpperCase","ColorInput","props","prefixCls","disabledAlpha","onFormatChange","onChange","disabledFormat","colorFormat","setColorFormat","colorInputPrefixCls","concat","handleFormatChange","newFormat","steppersNode","inputProps","createElement","Object","assign","className","variant","getPopupContainer","current","popupMatchSelectWidth","placement","size","options"],"sources":["/Users/vicentezhu/Desktop/theater-reservation-system/frontend/node_modules/antd/es/color-picker/components/ColorInput.js"],"sourcesContent":["\"use client\";\n\nimport React, { useMemo } from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Select from '../../select';\nimport { FORMAT_HEX, FORMAT_HSB, FORMAT_RGB } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nconst selectOptions = [FORMAT_HEX, FORMAT_HSB, FORMAT_RGB].map(format => ({\n  value: format,\n  label: format.toUpperCase()\n}));\nconst ColorInput = props => {\n  const {\n    prefixCls,\n    format,\n    value,\n    disabledAlpha,\n    onFormatChange,\n    onChange,\n    disabledFormat\n  } = props;\n  const [colorFormat, setColorFormat] = useMergedState(FORMAT_HEX, {\n    value: format,\n    onChange: onFormatChange\n  });\n  const colorInputPrefixCls = `${prefixCls}-input`;\n  const handleFormatChange = newFormat => {\n    setColorFormat(newFormat);\n  };\n  const steppersNode = useMemo(() => {\n    const inputProps = {\n      value,\n      prefixCls,\n      onChange\n    };\n    switch (colorFormat) {\n      case FORMAT_HSB:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n      case FORMAT_RGB:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n      // case FORMAT_HEX:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorInputPrefixCls}-container`\n  }, !disabledFormat && (/*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    variant: \"borderless\",\n    getPopupContainer: current => current,\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: `${prefixCls}-format-select`,\n    size: \"small\",\n    options: selectOptions\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), !disabledAlpha && (/*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  })));\n};\nexport default ColorInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}