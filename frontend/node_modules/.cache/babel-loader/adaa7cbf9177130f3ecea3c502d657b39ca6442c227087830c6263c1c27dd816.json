{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    iconFontSize,\n    iconFontSizeLG,\n    iconFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, iconFontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    fontSize,\n    [\"&\".concat(componentCls, \"-square\")]: {\n      borderRadius: radius\n    },\n    [\"&\".concat(componentCls, \"-icon\")]: {\n      fontSize: iconFontSize,\n      [\"> \".concat(iconCls)]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: \"\".concat(unit(lineWidth), \" \").concat(lineType, \" transparent\"),\n      '&-image': {\n        background: 'transparent'\n      },\n      [\"\".concat(antCls, \"-image-img\")]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, iconFontSize, borderRadius)), {\n      '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, iconFontSizeLG, borderRadiusLG)),\n      '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, iconFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-group\")]: {\n      display: 'inline-flex',\n      [componentCls]: {\n        borderColor: groupBorderColor\n      },\n      '> *:not(:first-child)': {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [\"\".concat(componentCls, \"-group-popover\")]: {\n      [\"\".concat(componentCls, \" + \").concat(componentCls)]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: fontSize,\n    textFontSizeLG: fontSize,\n    textFontSizeSM: fontSize,\n    iconFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    iconFontSizeLG: fontSizeHeading3,\n    iconFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);","map":{"version":3,"names":["unit","resetComponent","genStyleHooks","mergeToken","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","iconFontSize","iconFontSizeLG","iconFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","concat","margin","Object","assign","position","display","justifyContent","alignItems","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","prepareComponentToken","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round","colorTextLightSolid","colorTextPlaceholder","avatarToken"],"sources":["/Users/vicentezhu/Desktop/theater-reservation-system/frontend/node_modules/antd/es/avatar/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    iconFontSize,\n    iconFontSizeLG,\n    iconFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, iconFontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    fontSize,\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize: iconFontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${unit(lineWidth)} ${lineType} transparent`,\n      '&-image': {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, iconFontSize, borderRadius)), {\n      '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, iconFontSizeLG, borderRadiusLG)),\n      '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, iconFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [componentCls]: {\n        borderColor: groupBorderColor\n      },\n      '> *:not(:first-child)': {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: fontSize,\n    textFontSizeLG: fontSize,\n    textFontSizeSM: fontSize,\n    iconFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    iconFontSizeLG: fontSizeHeading3,\n    iconFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}